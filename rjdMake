#!/bin/bash --

C_LIB=clib2
_CPPFLAGS=
# Too lazy to use getopts!
if (( ${#} > 0 ))
then
    if [[ "${1}" == "clib=newlib" ]]
    then
	C_LIB=newlib
	_CPPFLAGS="-DSQLITE_MAX_MMAP_SIZE=0 -DSQLITE_OMIT_WAL -DSQLITE_OMIT_LOAD_EXTENSION"
    elif [[ "${1}" != "clib=clib2" ]]
    then
	echo "Could not understand argumet ${1}. Only clib=<newlib|clib2[default]> is understood" 1>&2
	exit 1
    fi
fi
INSTALL_PREFIX="$(pwd)/installAmiga_${C_LIB}"

which ppc-amigaos-gcc 1>/dev/null 2>&1 || { echo "ppc-amigaos-* binaries not found. Check your path" ; exit 1 ; }
if [[ "Linux" != "$(uname)" ]]
then
    echo "Expected the BUILD machine to be Linux"
    exit 1
fi

function create_amiga_SDK_package
{
    SDK_DIRS=(
	"local/${C_LIB}/bin"
	"local/${C_LIB}/lib"
	"local/common/include"
    )

    for sdk_dir in "${SDK_DIRS[@]}"
    do
	mkdir -p "${sdk_dir}"
	find "${INSTALL_PREFIX}" -type d -iname "$(basename ${sdk_dir})" -exec cp -r {}/. "${sdk_dir}" \;
    done
    lha a libsqlite3_3_34.lha local/

}

## We will apply the patch in amiga-diff.txt. See http://aminet.net/package/biz/dbase/sqlite-3.34.0-amiga.
patch -p1 <amiga-diff.txt

./configure \
    --host=ppc-amigaos \
    --prefix="${INSTALL_PREFIX}" \
    --disable-shared \
    --enable-static \
    CFLAGS="-mcrt=${C_LIB}" \
    CPPFLAGS="-mcrt=${C_LIB} -include rjdInclude.h ${_CPPFLAGS}" \
    CXXFLAGS="-mcrt=${C_LIB}" \
    LDFLAGS="-static -athread=native -mcrt=${C_LIB} -lm"
# Read rjdInclude.h

function clean_patch
{
    patch --reverse -p1 <amiga-diff.txt
    find \( -name "*.rej" -o -name "*.orig" \) -delete
}

make -j$(nproc) && clean_patch || { clean_patch ;                                \
				    echo 1>&2 "ERROR: Failed to build LIBXML2" ; \
				    exit 1; }

make install

create_amiga_SDK_package

echo "FINISHED. See libsqlite3_3_34.lha"

exit 0
